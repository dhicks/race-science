This section examines topic-document distributions at the author level, focusing on Pioneer-funded authors.  First, a separate helper script uses regular expressions to identify Pioneer-funded authors in the mainstream journal and MQ metadata.  

```{r}
library(tidyverse)
theme_set(theme_bw())
library(tmfast)

library(arrow)
library(here)

data_dir = here('data')
tm_dir = here(data_dir, '04_tm')

## Load data ----
source(here('R', 'pf_authors.R'))

meta_df = open_dataset(here(data_dir, '01_metadata')) |> 
    mutate(article_id = tolower(article_id)) |> 
    inner_join(pf_authors, by = 'article_id') |>
    collect()

## Available documents by author
count(meta_df, pf_author)
```

We then load the topic models.  For this supplemental analysis, we're going to focus on the medium vocabulary models.  We use pre-calculated normalization exponents for the topic-document distributions.  

```{r}
## Load topic models ----
model_files = list.files(tm_dir, '*_tmfast.Rds') %>%
    here(tm_dir, .) |> 
    set_names('lg', 'md', 'sm')
exp_files = list.files(data_dir, '*_exponents.Rds') %>%
    here(data_dir, .) |> 
    set_names('lg', 'md', 'sm')
## Helper to read exponents as a named num
read_exp = function(file) {
    file |> 
        read_rds() |> 
        pull(exponent, name = k)
}

this_vocab = 'md'

this_model_file = model_files[this_vocab]
this_model = read_rds(this_model_file)
this_exp = exp_files[this_vocab] |> 
    read_exp()

gamma_df = tidy_all(this_model, 
                    matrix = 'gamma') |> 
    group_split(k) |> 
    map2_dfr(this_exp, ~ renorm(.x, document, gamma, .y)) |> 
    inner_join(meta_df, 
               by = c('document' = 'article_id'), 
               multiple = 'all')
```

A tile plot of across all values of $k$ is difficult to read, but suggests that individual researchers often work in just a few topics. 

```{r}
#| fig.height: 8
#| fig.width: 8
#| fig.cap: "Topic-document distributions, medium vocabulary, all values of k, by Pioneer-funded author"
## Tile plot ----
ggplot(gamma_df, aes(topic, document, fill = gamma)) +
    geom_raster() +
    geom_vline(xintercept = c(10, 20, 30, 40) + .5,
               color = 'black') +
    facet_grid(rows = vars(pf_author), 
               cols = vars(k),
               scale = 'free', 
               switch = 'y',
               labeller = label_wrap_gen(width = 15), 
               # space = 'free_y'
               ) +
    scale_x_discrete(breaks = c('V10', 'V20', 'V30', 'V40', 
                                'V50', 'V60')) +
    scale_y_discrete(breaks = NULL,
                     name = '') +
    scale_fill_viridis_c(option = 'viridis', direction = 1) +
    theme_minimal() +
    theme(axis.ticks.x = element_line(),
          legend.position = 'bottom',
          plot.margin = margin(r = 10), 
          strip.text.y.left = element_text(angle = 0))
```

Focusing on $k=40$ suggests both overlaps and differences across authors. 

```{r}
#| fig.height: 4
#| fig.width: 7
#| fig.cap: "Topic-document distributions, medium vocabulary, $k=40$, by Pioneer-funded author"
gamma_df |> 
    filter(k == 40) |> 
    ggplot(aes(topic, document, fill = gamma)) +
    geom_raster() +
    geom_vline(xintercept = c(10, 20, 30, 40) + .5,
               color = 'black') +
    facet_wrap(vars(pf_author), 
               scale = 'free', 
               labeller = label_wrap_gen(width = 15), 
               # space = 'free_y'
    ) +
    scale_x_discrete(breaks = c('V10', 'V20', 'V30', 'V40')) +
    scale_y_discrete(breaks = NULL,
                     name = '') +
    scale_fill_viridis_c(option = 'viridis', direction = 1) +
    theme_minimal() +
    theme(axis.ticks.x = element_line(),
          legend.position = 'bottom',
          plot.margin = margin(r = 10))
```

In particular, for $k=40$, all Pioneer-funded authors publish a significant number of papers in at least one of the focal topics for this model:  V07 (MQ race), V22 (mainstream intelligence), and V24 (race-and-intelligence). 

```{r}
#| fig.height: 4
#| fig.width: 6
#| fig.cap: "Topic-document distributions, for $k=40$ and medium vocabulary, by Pioneer-funded author. Each line represents the topic distribution for a single document. The use of transparency means that the darkness of a line corresponds to the frequency of that topic in the author's documents. Blue vertical lines indicate the focal topics for this model."
gamma_df |> 
    filter(k == 40) |> 
    mutate(author_count = n(), .by = pf_author) |> 
    ggplot(aes(topic, gamma, group = document)) +
    geom_line(aes(alpha = 1/author_count), show.legend = FALSE) +
    geom_vline(xintercept = c('V07', 'V22', 'V24'), 
               color = 'blue', alpha = 1) +
    facet_wrap(vars(pf_author)) +
    scale_x_discrete(breaks = c('V10', 'V20', 'V30'))
```

```{r}
## Document max count ----
## Due to filtering, topic breaks look weird
gamma_df |> 
    group_by(k, pf_author, document) |> 
    filter(gamma == max(gamma)) |> 
    group_by(k, pf_author) |> 
    count(topic) |> 
    ungroup() |> 
    # complete(pf_author, nesting(k, topic), 
    #          fill = list(n = 0L)) |> 
    ggplot(aes(topic, n)) +
    # geom_vline(xintercept = c('V10', 'V20', 'V30', 'V40', 
    #                           'V50', 'V60'), 
    #            alpha = .1) +
    geom_col() +
    facet_grid(rows = vars(pf_author), 
               cols = vars(k), 
               scales = 'free') +
    scale_x_discrete(breaks = c('V10', 'V20', 'V30', 'V40', 
                                'V50', 'V60')) +
    scale_y_continuous(breaks = scales::pretty_breaks(3)) +
    theme(strip.text.y = element_text(angle = 0))

ggsave(here('out', '13_doc_max.png'), 
       height = 8, width = 8, bg = 'white', scale = 2)

gamma_df |> 
    filter(k == 40) |> 
    group_by(pf_author, document) |> 
    filter(gamma == max(gamma)) |> 
    group_by(pf_author) |> 
    count(topic) |> 
    complete(topic = {1:40 |> 
            str_pad(2, pad = '0') %>% 
            str_c('V', .)}, 
            fill = list(n = 0L)) |> 
    ggplot(aes(topic, n)) +
    geom_vline(xintercept = c('V07', 'V22', 'V24'), 
               color = 'blue', alpha = .5) +
    geom_col() +
    facet_wrap(vars(pf_author), 
               scales = 'free_y') +
    scale_x_discrete(breaks = c('V10', 'V20', 'V30')) +
    scale_y_continuous(breaks = scales::pretty_breaks())

## Document threshold count ----
gamma_df |> 
    filter(k == 40) |> 
    group_by(pf_author, document) |> 
    filter(gamma > .5) |> 
    group_by(pf_author) |> 
    count(topic) |> 
    complete(topic = {1:40 |> 
            str_pad(2, pad = '0') %>% 
            str_c('V', .)}, 
            fill = list(n = 0L)) |> 
    ggplot(aes(topic, n)) +
    geom_vline(xintercept = c('V07', 'V22', 'V24'), 
               color = 'blue', alpha = .5) +
    geom_col() +
    facet_wrap(vars(pf_author), 
               scales = 'free_y') +
    scale_x_discrete(breaks = c('V10', 'V20', 'V30', 'V40'))
```